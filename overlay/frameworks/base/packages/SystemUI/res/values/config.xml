<?xml version="1.0" encoding="utf-8"?>
<!--
/*
** Copyright 2017, The Android Open Source Project
**
** Licensed under the Apache License, Version 2.0 (the "License");
** you may not use this file except in compliance with the License.
** You may obtain a copy of the License at
**
**     http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "AS IS" BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
*/
-->

<!-- These resources are around just to allow their values to be customized
     for different hardware and product builds. -->
<resources>
    <!-- A path similar to frameworks/base/core/res/res/values/config.xml
      config_mainBuiltInDisplayCutout that describes a path larger than the exact path of a display
      cutout. If present as well as config_enableDisplayCutoutProtection is set to true, then
      SystemUI will draw this "protection path" instead of the display cutout path that is normally
      used for anti-aliasing.
      This path will only be drawn when the front-facing camera turns on, otherwise the main
      DisplayCutout path will be rendered
       -->
    <string translatable="false" name="config_frontBuiltInDisplayCutoutProtection">
        M 500,52
        a 35,35 0 1 0 82,0 35,35 0 1 0 -82,0
        Z
    </string>

    <!--  ID for the camera that needs extra protection -->
    <string translatable="false" name="config_protectedCameraId">1</string>

    <!-- Comma-separated list of packages to exclude from camera protection. In our case,
    ignore the gaze detection package -->
    <string translatable="false" name="config_cameraProtectionExcludedPackages">com.google.android.as</string>

    <!--  Flag to turn on the rendering of the above path or not  -->
    <bool name="config_enableDisplayCutoutProtection">true</bool>

    <!-- Doze: check proximity sensor before pulsing? -->
    <bool name="doze_proximity_check_before_pulse">false</bool>

    <!-- Whether to pulse onFingerDown actions while in AOD. -->
    <bool name="config_pulseOnFingerDownInAod">true</bool>

    <!-- Type of a sensor that provides a low-power estimate of the desired display
     brightness, suitable to listen to while the device is asleep (e.g. during
     always-on display) -->
    <string name="doze_brightness_sensor_type" translatable="false">xiaomi.sensor.aod</string>

    <!-- Doze: Table that translates sensor values from the doze_brightness_sensor_type sensor
         to brightness values; -1 means keeping the current brightness. -->
    <integer-array name="config_doze_brightness_sensor_to_brightness">
        <item>-1</item>
        <item>-1</item>
        <item>-1</item>
        <item>1</item>
        <item>255</item>
        <item>1</item>
    </integer-array>

    <!-- Doze: Table that translates sensor values from the doze_brightness_sensor_type sensor
         to an opacity value for a black scrim that is overlayed in AOD1.
         Valid range is from 0 (transparent) to 255 (opaque).
         -1 means keeping the current opacity. -->
    <integer-array name="config_doze_brightness_sensor_to_scrim_opacity">
        <item>-1</item>
        <item>0</item>
        <item>0</item>
        <item>0</item>
        <item>0</item>
        <item>0</item>
    </integer-array>

    <!-- Default rounded corner curve (a Bezier). Must match (the curved path in) rounded.xml.
         Note that while rounded.xml includes the entire path (including the horizontal and vertical
         corner edges), this pulls out just the curve.
     -->
    <string name="config_rounded_mask" translatable="false">M122,0 C71.76,3.59 52.03,8.07 29.6,29.6 8.07,52.03 3.59,71.76 0,122</string>

    <!--  Allow CornerHandleView and PathSpecCornerPathRenderer to decouple from corner-radius -->
    <dimen name="config_rounded_mask_size">122px</dimen>

    <!-- Override value to use for proximity sensor.  -->
    <string name="proximity_sensor_type" translatable="false">android.sensor.proximity</string>

    <!-- If using proximity_sensor_type, specifies a threshold value to distinguish near and
         far break points. A sensor value less than this is considered "near". -->
    <item name="proximity_sensor_threshold" translatable="false" format="float" type="dimen">5</item>

    <!-- The radius of the enrollment progress bar, in dp -->
    <integer name="config_udfpsEnrollProgressBar" translatable="false">112</integer>
</resources>
